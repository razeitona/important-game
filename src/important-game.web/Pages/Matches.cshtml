@page
@using System.Globalization
@using System.Text.Json
@model MatchesModel
@{
    ViewData["Title"] = "Upcoming Exciting Matches - Match to Watch";
}

<div class="wm-match-filter">
    <div class="input-group mw-search">
        <i class="bi bi-search"></i>
        <input type="text" class="form-control" placeholder="Search match or team..." id="search-match">
        <ul id="mw-search-result"></ul>
    </div>
</div>


<div class="wm-matches">


    <div class="match-league-filter">
        @foreach (var league in Model.Matches.Leagues)
        {
            <div class="match-league-item" data-league="@league.Id">
                <img src="@("https://api.sofascore.app/api/v1/unique-tournament/" + league.Id  + "/image")" alt="@league.Name" width="20px" />
                <span>@league.Name</span>
            </div>
        }
    </div>

    <div class="matches-section">
        @if (Model.Matches.Matches.Count == 0)
        {
            <label>No excitment match to watch this week. We are looking for one.</label>
        }
        else
        {
            @foreach (var dates in Model.Matches.Matches.GroupBy(c => c.MatchDate.Date))
            {
                <div class="wm-match-date">
                    <h1 class="wm-match-date-title">@dates.Key.ToString("dd/MM/yyyy")</h1>
                    <div class="matches-section-content">
                        @foreach (var match in dates.OrderByDescending(c => c.ExcitementScore))
                        {
                            <partial name="_MatchCardSimple" for="@match" />
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fuse.js@7.0.0"></script>

    <script>




        $(document).ready(function () {
            // $("time").each(function (elem) {
            //     var utctimeval = $(this).html().trim();
            //     var date = new Date(utctimeval);
            //     var optionsDate = {
            //         day: "2-digit",
            //         month: "2-digit",
            //         year: "numeric",
            //     };
            //     var optionsTime = {
            //         hour: "numeric",
            //         minute: "numeric",
            //     };
            //     $(this).html(date.toLocaleString("pt", optionsDate) + " " + date.toLocaleString("pt", optionsTime));
            // });

            var list = @Html.Raw(JsonSerializer.Serialize(Model.Matches.Matches
          .Select(c => new { id = c.Id, home = c.HomeTeam.Name, away = c.AwayTeam.Name, homeslug = c.HomeTeam.Slug, awayslug = c.AwayTeam.Slug })));

            const fuseOptions = {
                threshold: 0.3,           // Adjust to control the fuzzy matching
                minMatchCharLength: 3,     // Minimum length of the pattern to start matching
                keys: [
                    "home",
                    "away"
                ]
            };

            const fuse = new Fuse(list, fuseOptions);

            // $("#search-match").on("input", function () {
            //     console.log("asdasd");
            // });
            document.getElementById('search-match').addEventListener('input', function () {

                const query = this.value;

                if (query.length < 3) {
                    document.getElementById('mw-search-result').innerHTML = '';
                    return;
                }

                // Perform search
                const results = fuse.search(query);
                console.log(results);

                // Render results
                const resultsList = document.getElementById('mw-search-result');
                resultsList.innerHTML = '';

                results.forEach(result => {
                    const game = result.item;
                    const li = document.createElement('li');
                    li.textContent = `${game.home} v ${game.away}`;
                    li.setAttribute('data-id', game.id);  // Set the id as a data attribute

                    // Add click event to navigate to the item
                    li.addEventListener('click', () => {
                        window.location.href = `#game-${game.homeslug}v${game.awayslug}`;  // Update URL pattern to match your routes
                        resultsList.innerHTML = '';
                    });

                    resultsList.appendChild(li);
                });
            });

            $(".match-league-item").each(function (elem) {
                if ($(this).hasClass("league-active")) {
                    var selectedDate = $(this).data("league");
                    updateGameHideStatus(selectedDate);
                    return;
                }
            });

            var filterLeagues = [];

            $(".match-league-item").on("click", function () {
                var selectedLeague = $(this).data("league");

                if (filterLeagues.indexOf(selectedLeague) == -1) {
                    filterLeagues.push(selectedLeague);
                    $(this).addClass("league-active");
                } else {
                    const index = filterLeagues.indexOf(selectedLeague);
                    filterLeagues.splice(index, 1);
                    $(this).removeClass("league-active");
                }
                updateGameHideStatus();

            });

            function updateGameHideStatus() {
                $(".match-card-simple").each(function (idx, elem) {
                    if (filterLeagues.length == 0) {
                        $(elem).removeClass("hide");
                    } else {
                        var matchLeague = $(elem).data("game-league");

                        if (filterLeagues.indexOf(matchLeague) > -1) {
                            $(elem).removeClass("hide");
                        } else {
                            $(elem).addClass("hide");
                        }
                    }
                });
            }

            $(".wm-match-date-title").on("click", function () {
                if ($(this).parent().children("div.matches-section-content").hasClass("hide")) {
                    $(this).removeClass("collapsed");
                    $(this).parent().children("div.matches-section-content").removeClass("hide");
                } else {
                    $(this).addClass("collapsed");
                    $(this).parent().children("div.matches-section-content").addClass("hide");
                }
            });

        });

    </script>
}