@page "/match/{id:int}"
@using System.Globalization
@using important_game.infrastructure.Extensions
@using important_game.infrastructure.ImportantMatch
@using important_game.infrastructure.ImportantMatch.Models
@model MatchModel
@{
    var matchInfo = Model.MatchInfo;

    if (matchInfo != null)
    {
        ViewData["Title"] = $"{matchInfo.HomeTeam.Name} v {matchInfo.AwayTeam.Name} - Excitement Analysis & Live Updates";
    }
    else
    {
        ViewData["Title"] = $"Excitment Match Not Found";
    }
}


@if (matchInfo == null)
{
    <div>Sorry, we couldn't find any excitment report for this match</div>
    return;
}

@section Header {
    @{
        var teamId = matchInfo.HomeTeam.Id;

        if (matchInfo.AwayTeam.IsTitleHolder || matchInfo.AwayTeam.TablePosition < matchInfo.HomeTeam.TablePosition)
            teamId = matchInfo.AwayTeam.Id;

        var url = "https://matchtowatch.net/match/" + matchInfo.Id;
        var image = "https://api.sofascore.app/api/v1/team/" + teamId + "/image";
    }
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="@Html.Raw(matchInfo.HomeTeam.Name) vs @Html.Raw(matchInfo.AwayTeam.Name) - Match to watch">
    <meta name="twitter:description" content="Follow the @Html.Raw(matchInfo.League.Name) match on @matchInfo.MatchDate.ToString("dd/MM/yyyy HH:mm") UTC time. Excitement Score: @(Math.Round((matchInfo.IsLive ? matchInfo.LiveExcitementScore : matchInfo.ExcitementScore)*100,0)). Key moments and stats here!">
    <meta name="twitter:image" content="@image">
    <meta name="twitter:url" content="@url">
}
<div class="match-detail" data-live="@matchInfo.IsLive">
    <div class="match-detail-content-left">
        <span class="match-detail-back"><i class="bi bi-arrow-left"></i>BACK</span>
        <div class="match-detail-info match-detail-card">
            <div class="match-detail-league">
                <div>
                    <img src="@("https://api.sofascore.app/api/v1/unique-tournament/" + matchInfo.League.Id + "/image")" alt="@(matchInfo.League.Name)" />
                </div>
                <div class="match-detail-league-title">
                    @matchInfo.League.Name
                </div>
                <div class="match-detail-time">
                    <time>
                        @matchInfo.MatchDate.ToString("dd/MM/yyyy HH:mm", CultureInfo.InvariantCulture)
                    </time>
                </div>
            </div>
            <div class="match-detail-teams">
                <div class="match-detail-team-info">
                    <img src="@("https://api.sofascore.app/api/v1/team/" + matchInfo.HomeTeam.Id + "/image")" alt="@(matchInfo.HomeTeam.Name)" />
                    <p>@matchInfo.HomeTeam.Name</p>
                </div>
                <div class="match-detail-team-label">
                    <span>vs</span>
                </div>
                <div class="match-detail-team-info">
                    <img src="@("https://api.sofascore.app/api/v1/team/" + matchInfo.AwayTeam.Id + "/image")" alt="@(matchInfo.AwayTeam.Name)" />
                    <p>@matchInfo.AwayTeam.Name</p>
                </div>
            </div>
        </div>
        @* HEAD TO HEAD *@
        <div class="match-detail-info match-detail-card match-detail-info-h2h">
            <h1>Head to Head History</h1>
            <div class="match-detail-info-h2h-content">
                @if (matchInfo.Headtohead.Count == 0)
                {
                    <span class="match-detail-info-h2h-empty">No matches between <i>@(matchInfo.HomeTeam.Name)</i> and <i>@(matchInfo.AwayTeam.Name)</i> the past two years </span>
                }
                else
                {
                    foreach (var match in matchInfo.Headtohead)
                    {
                        <div class="match-detail-info-h2h-item">
                            <span class="h2h-date">@match.MatchDate.ToString("dd/MM/yyyy")</span>
                            <div class="h2h-match">
                                @if (match.HomeTeamScore > match.AwayTeamScore)
                                {
                                    <span>@(match.HomeTeamName)</span>
                                    <span>@(match.HomeTeamScore)</span>
                                    <span>-</span>
                                    <span class="lost">@(match.AwayTeamScore)</span>
                                    <span class="lost">@(match.AwayTeamName)</span>
                                }
                                else if (match.AwayTeamScore > match.HomeTeamScore)
                                {
                                    <span class="lost">@(match.HomeTeamName)</span>
                                    <span class="lost">@(match.HomeTeamScore)</span>
                                    <span>-</span>
                                    <span>@(match.AwayTeamScore)</span>
                                    <span>@(match.AwayTeamName)</span>
                                }
                                else
                                {
                                    <span>@(match.HomeTeamName) @(match.HomeTeamScore)-@(match.AwayTeamScore) @(match.AwayTeamName)</span>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        @* TEAMS FORM *@
        <div class="match-detail-info match-detail-card match-detail-info-form">
            <h1>Recent Form</h1>
            <div class="match-detail-info-form-content">
                <div>
                    <span>@matchInfo.HomeTeam.Name</span>
                    <div>
                        @foreach (var form in matchInfo.HomeTeam.Form)
                        {
                            var formResult = form switch
                            {
                                MatchResultType.Win => "W",
                                MatchResultType.Draw => "D",
                                MatchResultType.Lost => "L",
                                _ => ""
                            };
                            <span data-form-score="@((int)form)">@formResult</span>
                        }
                    </div>
                </div>
                <div>
                    <span>@matchInfo.AwayTeam.Name</span>
                    <div>
                        @foreach (var form in matchInfo.AwayTeam.Form)
                        {
                            var formResult = form switch
                            {
                                MatchResultType.Win => "W",
                                MatchResultType.Draw => "D",
                                MatchResultType.Lost => "L",
                                _ => ""
                            };
                            <span data-form-score="@((int)form)">@formResult</span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="match-detail-content-right">
        @if (matchInfo.IsLive)
        {
            <div class="match-detail-info match-detail-card match-detail-info-live">
                <div class="match-detail-info-live-title">
                    <p>Live</p>
                    <div class="match-detail-info-live-title-score">
                        <span>Score</span>
                        <div class="match-detail-info-esinfo-score" data-es="@(Math.Round(matchInfo.LiveExcitementScore, 2).ToString().Replace(",", "."))">@(Math.Round(matchInfo.LiveExcitementScore * 100, 0))</div>
                    </div>
                </div>
                @* <div class="match-detail-info-live-content">
            <div class="match-detail-teams">
            <div class="match-detail-team-info">
            <img src="@("https://api.sofascore.app/api/v1/team/" + matchInfo.HomeTeam.Id + "/image")" alt="@(matchInfo.HomeTeam.Name)" />
            </div>
            <div class="eslive-map">
            <div id="heatmapContainer"></div>
            </div>
            <div class="match-detail-team-info">
            <img src="@("https://api.sofascore.app/api/v1/team/" + matchInfo.AwayTeam.Id + "/image")" alt="@(matchInfo.AwayTeam.Name)" />
            </div>
            </div>
            </div> *@
            </div>
        }
        <div class="match-detail-info match-detail-card match-detail-info-esdetail">
            <h1>Excitement Score Breakdown</h1>
            <div class="match-detail-info-esdetail-content">
                @foreach (var item in matchInfo.ExcitmentScoreDetail.Where(c => c.Value.Show))
                {
                    var scoreValue = Math.Round(item.Value.Value * 100, 0);
                    <div class="esdetail-item">
                        <div class="esdetail-title">
                            <span class="esdetail-name">@item.Key</span>
                            <span>@scoreValue</span>
                        </div>
                        <div class="progress esdetail-progress" role="progressbar" aria-label="@item.Key" aria-valuenow="@scoreValue" aria-valuemin="0" aria-valuemax="100">
                            <div class="progress-bar" style="width: @(scoreValue)%"></div>
                        </div>
                        @* <div class="text-xs text-gray-500 mt-1" data-id="element-66">Weight: 30%</div> *@
                    </div>
                }
                @if (matchInfo.IsRivalry)
                {
                    <span><i class="bi bi-thermometer-high"></i>Rivalry</span>
                }
                @if (matchInfo.HasTitleHolder)
                {
                    <span><i class="bi bi-trophy"></i>Title Holder</span>
                }
            </div>
        </div>
        <div class="match-detail-info match-detail-card match-detail-info-esinfo">
            <div class="match-detail-info-esinfo-title">
                <i class="bi bi-broadcast-pin"></i>
                <span>Excitement Score</span>
            </div>
            <div class="match-detail-info-esinfo-score" data-es="@(Math.Round(matchInfo.ExcitementScore, 2).ToString().Replace(",", "."))">@(Math.Round(matchInfo.ExcitementScore * 100, 0))</div>
            @* <p>This match has high excitement potential due to its significant impact on league standings and the historical rivalry between the teams.</p> *@
            <p>@matchInfo.Description</p>
        </div>


    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            // $("time").each(function (elem) {
            //     var utctimeval = $(this).html().trim();
            //     var date = new Date(utctimeval);
            //     var optionsDate = {
            //         day: "2-digit",
            //         month: "2-digit",
            //         year: "numeric",
            //     };
            //     var optionsTime = {
            //         hour: "numeric",
            //         minute: "numeric",
            //     };
            //     $(this).html(date.toLocaleString("pt", optionsDate) + " " + date.toLocaleString("pt", optionsTime));
            // });



            $(".match-detail-back").on("click", function () {
                history.back();
            });

        });
    </script>

}